{"version":3,"sources":["index.re","serviceWorker.js","app.re","screens/HomeScreen.re","screens/PomodoroReport.re","screens/PomodoroScreen.re","screens/PomodoroDashboard.re"],"names":["React","__webpack_require__","ReactDOMRe","ServiceWorker","App$ReasonScripts","renderToElementWithId","createElement","make","unregister","exports","register_service_worker","prim","register","unregister_service_worker","r","__webpack_exports__","d","isLocalhost","Boolean","window","location","hostname","match","config","navigator","URL","process","origin","addEventListener","swUrl","concat","fetch","then","response","status","headers","get","indexOf","serviceWorker","ready","registration","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ReasonReactRouter","HomeScreen$ReasonScripts","PomodoroReport$ReasonScripts","PomodoroScreen$ReasonScripts","PomodoroDashboard$ReasonScripts","Props","useUrl","undefined","exit","match$1","taskId","handleClick","_event","className","htmlFor","href","useReducer","action"],"mappings":"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","file":"static/js/main.b2389dd7.chunk.js","sourcesContent":["// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE\n'use strict';\n\nvar React = require(\"react\");\nvar ReactDOMRe = require(\"reason-react/src/ReactDOMRe.js\");\nvar ServiceWorker = require(\"./serviceWorker\");\nvar App$ReasonScripts = require(\"./app\");\n\nrequire(\"./index.css\");\n\nrequire(\"mini.css\");\n\nfunction register_service_worker(prim) {\n  ServiceWorker.register();\n  return /* () */0;\n}\n\nfunction unregister_service_worker(prim) {\n  ServiceWorker.unregister();\n  return /* () */0;\n}\n\nReactDOMRe.renderToElementWithId(React.createElement(App$ReasonScripts.make, { }), \"root\");\n\nServiceWorker.unregister();\n\nexports.register_service_worker = register_service_worker;\nexports.unregister_service_worker = unregister_service_worker;\n/*  Not a pure module */\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE\n'use strict';\n\nvar React = require(\"react\");\nvar ReasonReactRouter = require(\"reason-react/src/ReasonReactRouter.js\");\nvar HomeScreen$ReasonScripts = require(\"./screens/HomeScreen\");\nvar PomodoroReport$ReasonScripts = require(\"./screens/PomodoroReport\");\nvar PomodoroScreen$ReasonScripts = require(\"./screens/PomodoroScreen\");\nvar PomodoroDashboard$ReasonScripts = require(\"./screens/PomodoroDashboard\");\n\nfunction handleClick(_event) {\n  console.log(\"clicked!\");\n  return /* () */0;\n}\n\nfunction App(Props) {\n  var url = ReasonReactRouter.useUrl(undefined, /* () */0);\n  var match = url[/* path */0];\n  var exit = 0;\n  if (match && match[0] === \"pomodoro\") {\n    var match$1 = match[1];\n    if (match$1) {\n      var taskId = match$1[0];\n      switch (taskId) {\n        case \"dashboard\" : \n            if (match$1[1]) {\n              exit = 1;\n            } else {\n              return React.createElement(PomodoroDashboard$ReasonScripts.make, { });\n            }\n            break;\n        case \"report\" : \n            if (match$1[1]) {\n              exit = 1;\n            } else {\n              return React.createElement(PomodoroReport$ReasonScripts.make, { });\n            }\n            break;\n        default:\n          if (match$1[1]) {\n            exit = 1;\n          } else {\n            return React.createElement(PomodoroScreen$ReasonScripts.make, {\n                        taskId: taskId\n                      });\n          }\n      }\n    } else {\n      exit = 1;\n    }\n  } else {\n    exit = 1;\n  }\n  if (exit === 1) {\n    return React.createElement(HomeScreen$ReasonScripts.make, { });\n  }\n  \n}\n\nvar make = App;\n\nexports.handleClick = handleClick;\nexports.make = make;\n/* react Not a pure module */\n","// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE\n'use strict';\n\nvar React = require(\"react\");\n\nfunction HomeScreen(Props) {\n  return React.createElement(\"div\", undefined, React.createElement(\"header\", undefined, React.createElement(\"label\", {\n                      className: \"button drawer-toggle\",\n                      htmlFor: \"drawer-checkbox\"\n                    }), React.createElement(\"a\", {\n                      className: \"logo\",\n                      href: \"/\"\n                    }, \"f2echallenge\"), React.createElement(\"a\", {\n                      className: \"button\",\n                      href: \"/pomodoro/dashboard\"\n                    }, \"w1-pomodoro\"), React.createElement(\"span\", undefined, \"|\")), React.createElement(\"div\", {\n                  className: \"container\"\n                }, React.createElement(\"div\", {\n                      className: \"row\"\n                    }, React.createElement(\"div\", {\n                          className: \"col-sm-12 col-md-12 col-lg-12\"\n                        }, React.createElement(\"p\", undefined, \"Page content\")))));\n}\n\nvar make = HomeScreen;\n\nexports.make = make;\n/* react Not a pure module */\n","// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE\n'use strict';\n\nvar React = require(\"react\");\n\nfunction PomodoroReport(Props) {\n  return React.createElement(\"div\", undefined, \"Pomodoro report screen\");\n}\n\nvar make = PomodoroReport;\n\nexports.make = make;\n/* react Not a pure module */\n","// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE\n'use strict';\n\nvar React = require(\"react\");\n\nfunction PomodoroScreen(Props) {\n  var taskId = Props.taskId;\n  return React.createElement(\"div\", undefined, \"Pomodoro screen task id: \" + taskId);\n}\n\nvar make = PomodoroScreen;\n\nexports.make = make;\n/* react Not a pure module */\n","// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE\n'use strict';\n\nvar React = require(\"react\");\n\nfunction PomodoroDashboard(Props) {\n  React.useReducer((function (state, action) {\n          return state;\n        }), /* record */[/* todos : [] */0]);\n  return React.createElement(\"div\", undefined, \"Pomodoro dashboard screen\");\n}\n\nvar make = PomodoroDashboard;\n\nexports.make = make;\n/* react Not a pure module */\n"],"sourceRoot":""}